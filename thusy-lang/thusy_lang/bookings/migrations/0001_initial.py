# Generated by Django 4.1.7 on 2023-03-12 14:08

from decimal import Decimal
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.functions.text
import django.utils.timezone
import djmoney.models.fields
import djmoney.models.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Lesson Name')),
                ('price_per_hour_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('GBP', 'GBP £'), ('USD', 'USD $')], default='EUR', editable=False, max_length=3)),
                ('price_per_hour', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('25'), default_currency='EUR', max_digits=19, validators=[djmoney.models.validators.MinMoneyValidator({'EUR': 25, 'GBP': 20}), djmoney.models.validators.MaxMoneyValidator({'EUR': 2500, 'GBP': 2000})])),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Location Name')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('max_pupils', models.IntegerField(verbose_name='Max Pupils')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=75, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=75, verbose_name='Last Name')),
                ('language_taught', models.CharField(max_length=75, verbose_name='Language Taught')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('lesson', models.ManyToManyField(blank=True, related_name='lesson_teachers', related_query_name='lesson_teacher', to='bookings.lesson', verbose_name='Lessons')),
                ('location', models.ManyToManyField(related_name='location_teachers', related_query_name='location_teacher', to='bookings.location', verbose_name='Locations')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['last_name', 'middle_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='teacher',
            index=models.Index(fields=['last_name'], name='bookings_te_last_na_e53b51_idx'),
        ),
        migrations.AddIndex(
            model_name='teacher',
            index=models.Index(fields=['-last_name'], name='desc_last_name_idx'),
        ),
        migrations.AddIndex(
            model_name='teacher',
            index=models.Index(models.OrderBy(django.db.models.functions.text.Lower('last_name'), descending=True), name='lower_last_name_idx'),
        ),
    ]
